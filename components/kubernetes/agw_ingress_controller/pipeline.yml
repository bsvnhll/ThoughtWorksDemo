trigger: none
pr: none
#Variables used in the pipeline
# variables:
#   subscription_id: 'xxxxxxxxxxx'
#   resource_group_name: 'resourceGroup name'
#   namespace: 'Namespace'
#   user_assgined_identity: 'user assgined identity name'
#   user_assgined_identity_clientid: 'user assgined identity clientid'
#   couponapi_appgateway: 'appgatewayName'
#   app_lable: 'Application lable'
#   service_Port: '80'
#   target_Port: '4000'
#   ingress_path: '/'
#   aks_cluster_name: 'Kubernetes cluster name'

steps:
- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in yaml files'
  inputs:
    rootDirectory: components/kubernetes
    targetFiles: '**/*.yaml'

- task: Kubernetes@1
  displayName: 'apply pod_identity'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/pod_identity.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply namespace'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/namespace.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply pod identity'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_add_pod_identity.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply cluster role'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_cluster_role.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply config map'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_config_map.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply service account'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_service_account.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply pod identity binding'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_add_pod_identity_binding.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply cluster role binding'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_cluster_role_binding.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply agw ingress controller deployment'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/agw_ingress_controller/ingress_controller_deployment.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply coupon service'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/ingress/coupon-service.yaml'
  enabled: true

- task: Kubernetes@1
  displayName: 'apply coupon ingress'
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: AzureDevopsAuth
    azureResourceGroup: $(resource_group_name)
    kubernetesCluster: $(aks_cluster_name)
    command: apply
    useConfigurationFile: true
    configuration: 'components/kubernetes/ingress/coupon-ingress.yaml'
  enabled: true